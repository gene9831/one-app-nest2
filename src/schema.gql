# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccessRule {
  action: AccessRuleAction!
  path: String!
}

enum AccessRuleAction {
  ALLOW
  DENY
}

type Account {
  environment: String!
  homeAccountId: String!
  localAccountId: String!
  name: String
  tenantId: String!
  username: String!
}

type AppSettingsOfDrive {
  acessRules: [AccessRule!]
  rootPath: String
}

type AuthResult {
  accessToken: String!
  expiresAt: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Roles: admin"""
type Drive {
  appSettings: AppSettingsOfDrive
  createdBy: IdentitySet!
  createdDateTime: DateTime!
  description: String
  driveType: String!

  """Roles: guest"""
  id: String!
  lastModifiedBy: IdentitySet!
  lastModifiedDateTime: DateTime!
  name: String!
  owner: IdentitySet
  quota: Quota!
  webUrl: String!
}

type DriveItem {
  createdDateTime: DateTime!
  description: String
  file: File
  folder: Folder
  id: String!
  lastModifiedDateTime: DateTime!
  name: String!
  shareLink: String
  size: Float!
}

type File {
  hashes: Hashes!
  mimeType: String!
}

type Folder {
  childCount: Int!
}

type Hashes {
  crc32Hash: String
  quickXorHash: String
  sha1Hash: String
  sha256Hash: String
}

type Identity {
  displayName: String!
  id: String
}

type IdentitySet {
  application: Identity
  device: Identity
  user: Identity
}

type Mutation {
  """Roles: user"""
  auth: AuthResult!

  """Roles: admin"""
  createShareLink(id: String!): String!

  """Roles: admin"""
  deleteShareLink(id: String!): String!
  login(password: String!, username: String!): AuthResult!

  """Roles: admin"""
  removeAccount(localAccountId: String!): Boolean!

  """Roles: admin"""
  removeDrive(localAccountId: String!): Boolean!

  """Roles: admin"""
  updateDrive(entire: Boolean = false, localAccountId: String!): String!

  """Roles: admin"""
  updateDrives(entire: Boolean = false, localAccountIds: [String!]): String!
}

"""Mongodb ObjectId custom scalar type"""
scalar ObjectId

enum Order {
  ASC
  DESC
}

type Query {
  """Roles: admin"""
  account(localAccountId: String!): Account!

  """Roles: admin"""
  accounts: [Account!]!

  """Roles: admin"""
  authCodeUrl: String!
  driveItem(id: String, path: String): DriveItem!
  driveItems(limit: Int = 20, order: Order = ASC, parentId: String, path: String, skip: Int = 0, sortKey: String): [DriveItem!]!

  """Roles: admin | guest"""
  drives: [Drive!]!

  """Roles: admin"""
  updateTask(id: ObjectId!): UpdateTask!
}

type Quota {
  deleted: Float!
  remaining: Float!
  state: String!
  total: Float!
  used: Float!
}

"""更新任务完成后，再过10分钟自动删除更新记录"""
type UpdateTask {
  completed: String
  name: String!
  progress: Float!
}
